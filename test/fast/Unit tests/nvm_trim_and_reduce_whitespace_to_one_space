#!/bin/sh

die () { printf "$@" ; exit 1; }

\. ../../../nvm.sh

# Test cases that have no new lines
# input:expected_output
test_cases='1:1
   1    2    3:1 2 3
   1.1 		2.2 :1.1 2.2
      1.2.3:1.2.3
 1		1  :1 1
	2			2			:2 2'

while [ -n "$test_cases" ]; do
  line=$(echo "$test_cases" | head -n1)
  input=$(echo "$line" | awk -F: '{ print $1 }')
  expected_output=$(echo "$line" | awk -F: '{ print $2 }')
  actual_output=$(nvm_trim_and_reduce_whitespace_to_one_space "$input")
  if [ -z "$input" ] || [ -z "$expected_output" ] || [ "$expected_output" != "$actual_output" ]; then
    die "nvm_reduce_whitespace_to_one_space test case failed. expected_output: '$expected_output'. actual_output: '$actual_output'.\n"
  fi
  test_cases=$(echo "$test_cases" | tail -n +2)
done

# Test cases that have new lines
expected_output='1 2 3'
new_line_1=' 1
 2 	3 '
actual_output=$(nvm_trim_and_reduce_whitespace_to_one_space "$new_line_1")
if [ "$actual_output" != "$expected_output" ]; then
  die "nvm_trim_and_reduce_whitespace_to_one_space test with new_line_1 failed. Actual output: '$actual_output' Expected output: '$expected_output'"
fi

new_line_2=' 1	 2
3	 '
actual_output=$(nvm_trim_and_reduce_whitespace_to_one_space "$new_line_2")
if [ "$actual_output" != "$expected_output" ]; then
  die "nvm_trim_and_reduce_whitespace_to_one_space test with new_line_2 failed. Actual output: '$actual_output' Expected output: '$expected_output'"
fi

new_line_3='	1

2
3'
actual_output=$(nvm_trim_and_reduce_whitespace_to_one_space "$new_line_3")
if [ "$actual_output" != "$expected_output" ]; then
  die "nvm_trim_and_reduce_whitespace_to_one_space test with new_line_3 failed. Actual output: '$actual_output' Expected output: '$expected_output'"
fi
exit 0

